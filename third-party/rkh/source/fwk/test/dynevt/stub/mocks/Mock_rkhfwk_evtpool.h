/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_RKHFWK_EVTPOOL_H
#define _MOCK_RKHFWK_EVTPOOL_H

#include "rkhfwk_evtpool.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mock_rkhfwk_evtpool_Init(void);
void Mock_rkhfwk_evtpool_Destroy(void);
void Mock_rkhfwk_evtpool_Verify(void);




#define rkh_evtPool_init_Ignore() rkh_evtPool_init_CMockIgnore()
void rkh_evtPool_init_CMockIgnore(void);
#define rkh_evtPool_init_Expect() rkh_evtPool_init_CMockExpect(__LINE__)
void rkh_evtPool_init_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_rkh_evtPool_init_CALLBACK)(int cmock_num_calls);
void rkh_evtPool_init_StubWithCallback(CMOCK_rkh_evtPool_init_CALLBACK Callback);
#define rkh_evtPool_getPool_IgnoreAndReturn(cmock_retval) rkh_evtPool_getPool_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void rkh_evtPool_getPool_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, RKHEvtPool* cmock_to_return);
#define rkh_evtPool_getPool_ExpectAndReturn(stoStart, stoSize, evtSize, cmock_retval) rkh_evtPool_getPool_CMockExpectAndReturn(__LINE__, stoStart, stoSize, evtSize, cmock_retval)
void rkh_evtPool_getPool_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, void* stoStart, rui16_t stoSize, RKH_ES_T evtSize, RKHEvtPool* cmock_to_return);
typedef RKHEvtPool* (* CMOCK_rkh_evtPool_getPool_CALLBACK)(void* stoStart, rui16_t stoSize, RKH_ES_T evtSize, int cmock_num_calls);
void rkh_evtPool_getPool_StubWithCallback(CMOCK_rkh_evtPool_getPool_CALLBACK Callback);
#define rkh_evtPool_getPool_IgnoreArg_stoStart() rkh_evtPool_getPool_CMockIgnoreArg_stoStart(__LINE__)
void rkh_evtPool_getPool_CMockIgnoreArg_stoStart(UNITY_LINE_TYPE cmock_line);
#define rkh_evtPool_getPool_IgnoreArg_stoSize() rkh_evtPool_getPool_CMockIgnoreArg_stoSize(__LINE__)
void rkh_evtPool_getPool_CMockIgnoreArg_stoSize(UNITY_LINE_TYPE cmock_line);
#define rkh_evtPool_getPool_IgnoreArg_evtSize() rkh_evtPool_getPool_CMockIgnoreArg_evtSize(__LINE__)
void rkh_evtPool_getPool_CMockIgnoreArg_evtSize(UNITY_LINE_TYPE cmock_line);
#define rkh_evtPool_getBlockSize_IgnoreAndReturn(cmock_retval) rkh_evtPool_getBlockSize_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void rkh_evtPool_getBlockSize_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, rui8_t cmock_to_return);
#define rkh_evtPool_getBlockSize_ExpectAndReturn(me, cmock_retval) rkh_evtPool_getBlockSize_CMockExpectAndReturn(__LINE__, me, cmock_retval)
void rkh_evtPool_getBlockSize_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RKHEvtPool* const me, rui8_t cmock_to_return);
typedef rui8_t (* CMOCK_rkh_evtPool_getBlockSize_CALLBACK)(RKHEvtPool* const me, int cmock_num_calls);
void rkh_evtPool_getBlockSize_StubWithCallback(CMOCK_rkh_evtPool_getBlockSize_CALLBACK Callback);
#define rkh_evtPool_getBlockSize_IgnoreArg_me() rkh_evtPool_getBlockSize_CMockIgnoreArg_me(__LINE__)
void rkh_evtPool_getBlockSize_CMockIgnoreArg_me(UNITY_LINE_TYPE cmock_line);
#define rkh_evtPool_get_IgnoreAndReturn(cmock_retval) rkh_evtPool_get_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void rkh_evtPool_get_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, RKH_EVT_T* cmock_to_return);
#define rkh_evtPool_get_ExpectAndReturn(me, cmock_retval) rkh_evtPool_get_CMockExpectAndReturn(__LINE__, me, cmock_retval)
void rkh_evtPool_get_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RKHEvtPool* const me, RKH_EVT_T* cmock_to_return);
typedef RKH_EVT_T* (* CMOCK_rkh_evtPool_get_CALLBACK)(RKHEvtPool* const me, int cmock_num_calls);
void rkh_evtPool_get_StubWithCallback(CMOCK_rkh_evtPool_get_CALLBACK Callback);
#define rkh_evtPool_get_IgnoreArg_me() rkh_evtPool_get_CMockIgnoreArg_me(__LINE__)
void rkh_evtPool_get_CMockIgnoreArg_me(UNITY_LINE_TYPE cmock_line);
#define rkh_evtPool_put_Ignore() rkh_evtPool_put_CMockIgnore()
void rkh_evtPool_put_CMockIgnore(void);
#define rkh_evtPool_put_Expect(me, evt) rkh_evtPool_put_CMockExpect(__LINE__, me, evt)
void rkh_evtPool_put_CMockExpect(UNITY_LINE_TYPE cmock_line, RKHEvtPool* const me, RKH_EVT_T* evt);
typedef void (* CMOCK_rkh_evtPool_put_CALLBACK)(RKHEvtPool* const me, RKH_EVT_T* evt, int cmock_num_calls);
void rkh_evtPool_put_StubWithCallback(CMOCK_rkh_evtPool_put_CALLBACK Callback);
#define rkh_evtPool_put_IgnoreArg_me() rkh_evtPool_put_CMockIgnoreArg_me(__LINE__)
void rkh_evtPool_put_CMockIgnoreArg_me(UNITY_LINE_TYPE cmock_line);
#define rkh_evtPool_put_IgnoreArg_evt() rkh_evtPool_put_CMockIgnoreArg_evt(__LINE__)
void rkh_evtPool_put_CMockIgnoreArg_evt(UNITY_LINE_TYPE cmock_line);
#define rkh_evtPool_getNumUsed_IgnoreAndReturn(cmock_retval) rkh_evtPool_getNumUsed_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void rkh_evtPool_getNumUsed_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, rui8_t cmock_to_return);
#define rkh_evtPool_getNumUsed_ExpectAndReturn(me, cmock_retval) rkh_evtPool_getNumUsed_CMockExpectAndReturn(__LINE__, me, cmock_retval)
void rkh_evtPool_getNumUsed_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RKHEvtPool* const me, rui8_t cmock_to_return);
typedef rui8_t (* CMOCK_rkh_evtPool_getNumUsed_CALLBACK)(RKHEvtPool* const me, int cmock_num_calls);
void rkh_evtPool_getNumUsed_StubWithCallback(CMOCK_rkh_evtPool_getNumUsed_CALLBACK Callback);
#define rkh_evtPool_getNumUsed_IgnoreArg_me() rkh_evtPool_getNumUsed_CMockIgnoreArg_me(__LINE__)
void rkh_evtPool_getNumUsed_CMockIgnoreArg_me(UNITY_LINE_TYPE cmock_line);
#define rkh_evtPool_getNumMin_IgnoreAndReturn(cmock_retval) rkh_evtPool_getNumMin_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void rkh_evtPool_getNumMin_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, rui8_t cmock_to_return);
#define rkh_evtPool_getNumMin_ExpectAndReturn(me, cmock_retval) rkh_evtPool_getNumMin_CMockExpectAndReturn(__LINE__, me, cmock_retval)
void rkh_evtPool_getNumMin_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RKHEvtPool* const me, rui8_t cmock_to_return);
typedef rui8_t (* CMOCK_rkh_evtPool_getNumMin_CALLBACK)(RKHEvtPool* const me, int cmock_num_calls);
void rkh_evtPool_getNumMin_StubWithCallback(CMOCK_rkh_evtPool_getNumMin_CALLBACK Callback);
#define rkh_evtPool_getNumMin_IgnoreArg_me() rkh_evtPool_getNumMin_CMockIgnoreArg_me(__LINE__)
void rkh_evtPool_getNumMin_CMockIgnoreArg_me(UNITY_LINE_TYPE cmock_line);
#define rkh_evtPool_getNumBlock_IgnoreAndReturn(cmock_retval) rkh_evtPool_getNumBlock_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void rkh_evtPool_getNumBlock_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, rui8_t cmock_to_return);
#define rkh_evtPool_getNumBlock_ExpectAndReturn(me, cmock_retval) rkh_evtPool_getNumBlock_CMockExpectAndReturn(__LINE__, me, cmock_retval)
void rkh_evtPool_getNumBlock_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RKHEvtPool* const me, rui8_t cmock_to_return);
typedef rui8_t (* CMOCK_rkh_evtPool_getNumBlock_CALLBACK)(RKHEvtPool* const me, int cmock_num_calls);
void rkh_evtPool_getNumBlock_StubWithCallback(CMOCK_rkh_evtPool_getNumBlock_CALLBACK Callback);
#define rkh_evtPool_getNumBlock_IgnoreArg_me() rkh_evtPool_getNumBlock_CMockIgnoreArg_me(__LINE__)
void rkh_evtPool_getNumBlock_CMockIgnoreArg_me(UNITY_LINE_TYPE cmock_line);

#endif
